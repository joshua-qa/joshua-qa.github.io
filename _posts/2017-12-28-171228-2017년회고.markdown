---
layout: post
title: 2017년 회고
date: 2017-12-28 19:07:38
tags: Daily
categories: Daily
---

사실 지난주까지만 해도, '내 주제에 회고를 써야하나..' 하는 생각이 많이 들었다. 그정도로 의욕이 떨어져 있었고 내가 쓰는 회고가 사람들에게 어떤 식으로 보일지 걱정을 많이 했다.

그래도 지난 한 해를 되돌아보는 시간을 가지는 건 중요하다고 생각이 들어서, 한번 써보려고 한다.



## 전직 준비를 시작하며 (QA -> 개발)

2016년 가을, 열심히 다니던 회사를 그만뒀다. (그 때까지만 해도 대기업 자회사에서 테스트 엔지니어로 일하고 있었다)

이후, 1년간 혼자 공부를 하며 전직 준비를 했다. 사실 공부하고는 별로 친하지 않았던지라, 1년이란 시간 동안 내 자신을 통제하기 위하여 많은 애를 썼던 것 같다.

제대로 준비하기 시작한 것은 2017년 1월이었고, 아래와 같은 것들을 하며 계획을 세웠다.

* 목표 달성 계획표 작성

  * [목표 달성 플래너](http://web-planner.s3-website-us-west-1.amazonaws.com/) 라는 웹 페이지를 알게 되었고, 1년 계획을 작성했다.

    ![plan](/images/plan.png)

  * 지금 와서 보면 굉장히 막연한 항목도 많고 고칠 점도 많은 계획표라고 생각한다. 그렇지만, 확실히 도움은 되었다.
    '내가 현재 얼마나 준비한 상태지?' '이번에 준비하면서 빼먹은 것은 무엇일까?' 같은 생각이 들 때마다 이 계획표를 꺼내보며 달성률을 체크했고 부족한 점을 보완하려 애썼다.

  * 1년동안 이 계획을 다 달성하진 못했고 특히 `PL` 항목은 왜 저 상태로 냅두었는지 후회가 된다. (이 언어로 무엇을 만들어보자 수준의 목표를 설정하거나 아예 다른 것으로 바꾸었어야 함)

  * 이 회고를 보시는 분들도, 내년에는 이런 류의 계획표를 작성해보시는걸 추천드립니다.

* Github 블로그 개설

  * 다들 Jekyll을 쓰시는 분위기였는데, 마음에 드는 스킨이 제법 많아 보이는 Hexo를 선택해서 블로그를 만들었다.
  * 마크다운 문법에는 익숙한 편이어서 작성하는데에는 문제 없었지만, 이미지 첨부해서 올릴 때 제법 귀찮기 때문에 어떤 식으로 해결할지 여전히 고민중이다.
  * 개발 이야기를 하려고 만든 블로그였지만 대부분 일기장 용도..로 활용한 것 같다.



연간 계획을 세운 뒤에는 `1일 1커밋`이라는  일일 목표를 세우고 실천하려고 노력했다.

결과적으로 봤을 때 이 목표를 세운 것은 아주 잘못된 활동 중에 하나였고, 자세한 얘기는 밑에서 적어보려고 한다.

Comment : 1일 1커밋이라는 목표가 잘못되었다는 것은 내가 그 목표를 아주 잘못된 방법으로 실천하려고 애썼기 때문이며, 올바른 방향으로 실천하시고 계신 많은 분들께는 전혀 해당사항이 없는 얘기임.



## 공부

자바 기본서를 보며 어떤 것부터 해야할지 고민하던 시기에, [OKKY](https://okky.kr/article/314296?note=1036129)에서 이런 댓글을 읽었다.

> 스펙, 학교, 영어 큰 의미 없습니다. 
>
> 자료구조, 운영체제, 네트워크, 알고리즘을 잘 알고 있는지 봅니다. 스프링? 그런 것 묻지 않습니다. 스프링 잘하는 사람 뽑을거면 경력 사원 뽑지요.

내가 엄청 좋아하는 개발자분이 쓰신 댓글이었고, 느끼는 바가 많아서 학습 방향도 이쪽으로 잡았다.

(이 분에게 개인적으로 개발 서적들을 추천받을 일이 있었는데 아주 큰 도움이 되었다 ^^)

사실 나는 임베디드소프트웨어 학과를 졸업했고, 컴공과 어느정도 비슷한 커리큘럼으로 수업을 들었었다. 그렇지만, 게임을 아주 열심히 하던 시기였기 때문에 ^^; 시험기간에만 대충 공부하고 방학이 되면 다 잊어버리는 상황을 반복했다.

그래서 전직을 준비하는 기간동안 컴공 기본과목에 대한 전반적인 학습이 필요한 상태였고, 다음과 같은 방법으로 학습을 진행했다.

* 전공 책 사서 읽기
  * 조금 쉬운 책을 먼저 읽고, 그 다음에 흔히 얘기하는 유명 전공서적을 보려고 애썼다.
  * OS
    * [OS? Oh Yes!](http://www.yes24.com/24/Goods/3696547)
      * 분량이 많지 않아서, 부담없이 볼 수 있는 책이다. 운영체제에 대하여 굉장히 쉽게 설명하고 있는 책이기 때문에 이 책을 다 읽고나서 공룡책을 봤더니 편하게 볼 수 있었다.
    * [Operating System Concepts](http://www.yes24.com/24/goods/8732235)
      * 특정 파트에 대해 좀 더 자세한 내용을 알고자 할 때 많이 활용한 책이다.
      * 한 가지 후회되는 점이 있다면 연습 문제를 풀지 않았다는 것이다. 앞으로도 두고두고 공부해야되는 책 중 하나기 때문에, 그 때는 연습 문제도 꼭 풀어야겠다.
  * 네트워크
    * [성공과 실패를 결정하는 1%의 네트워크 원리](http://www.yes24.com/24/Goods/17286237?Acode=101)
      * 기술 면접을 준비하다보면 흔히 나올 만한 질문으로 `브라우저에 주소를 입력하고 엔터를 치면 무슨 일이 일어나나요?` 같은 것이 있는데, 이 책은 바로 그 질문을 가지고 네트워크에 대해 설명하고 있다.
      * 각 계층별로 알아야 하는 점에 대해 쉽게 설명해주고 있기 때문에, '네트워크 무슨 책부터 봐야하는건가요?' 하시는 분들께 이 책을 강력 추천드린다.
    * [컴퓨터 네트워킹 하향식 접근](http://www.yes24.com/24/Goods/8280660?Acode=101)
      * 강의 들을 때 보려고 샀던 책인데, 초반부가 조금 지루해서 많이 못봤다. ㅠㅠ
    * [그림으로 배우는 HTTP & Network](http://www.yes24.com/24/Goods/15894097?Acode=101)
      * HTTP에 대해 잘 알지 못했을 때 읽었던 책이다. 나중에 모 회사 필기 시험을 준비하면서 가장 도움이 많이 되었던 책이기도 하고..
  * 컴퓨터구조
    * [컴퓨터 구조론 4판](http://www.yes24.com/24/goods/11924141?scode=032&OzSrank=1)
      * 지인 분에게 추천받아서 구매한 책이다. 스터디 할 때 사용했고, 내용이 어렵지 않아서 보기 편했다.
      * 스터디 용도로 사용했기 때문에 연습 문제까지 다 풀어서 다행이라고 생각하고 있다.
  * 자료구조, 알고리즘
    * [천인국 자료구조(C언어)](http://www.yes24.com/24/goods/18930744?scode=032&OzSrank=7)
      * 초반에는 자료구조를 C로 익혔는데 그 때 도움을 많이 받은 책이다.
    * [알고리즘 문제 해결 전략](http://www.yes24.com/24/Goods/8006522?Acode=101)
      * 필요한 부분만 찾아서 읽은 책이다. 처음에는 어렵게 느껴졌는데, 알고리즘 강의를 듣고난 뒤에 참고 용도로 활용하니까 아주 좋은 책이라는 것을 알게 되었다.
      * 한 가지 아쉬운 점이 있다면 이 책에서 다루는 문제를 거의 풀어보지 않았다는 점. (알고스팟 사이트를 활용하지 않았기 때문이지만...) 앞으로 내 스스로 해나가야 할 과제중 하나다.
    * [Foundation of Algorithms](http://www.yes24.com/24/goods/1409368?scode=032&OzSrank=5)
      * CLRS랑 이것 중 무엇을 살까 고민하다가, 자바 의사코드로 된 버전이 있다고 해서 이 책을 구매했다. 부끄러운 얘기지만 일부 파트를 제외하고는 그닥 참고하지 않았다..
* 주변 사람들이랑 스터디 하기
  * 아는 동생이 모종의 사유로 컴퓨터 구조론을 공부할 필요성을 느껴서, 같이 스터디를 하게 됐다.
  * 가볍게 볼 수 있는 전공서적을 추천 받아서 그걸로 매주마다 연습 문제 풀고 이런 저런 얘기를 하는 자리를 가졌는데, 지금 생각해보면 그것 때문에라도 매주마다 컴구 과목을 공부할 수 있었던게 아닐까 싶다.
  * 같이 스터디를 해준 성 모군에게 감사인사를 전하며, 카이스트 대학원 합격을 다시 한번 축하해주고 싶다.
  * 이 외에도 트위터에서 만난 지인 분들과 자료구조 스터디를 시도했는데 내가 성실하게 임하지 못해서 흐지부지 되었다. 앞으로 여러 사람과 스터디를 하게 된다면 철저한 계획 및 목표를 세우고 진행해야 될 것 같다.
* 인터넷으로 대학교 공개강의 듣기 (KOCW)
  * 인프런, 유다시티, 유데미 등의 사이트도 많이 활용했지만 특히 도움이 된 곳은 KOCW라고 생각한다.
  * 대부분의 컴공 과목에 대해 여러 학교들의 강의가 공개되어 있기 때문에 해당하는 전공 서적만 준비되어 있으면 무난히 그 내용을 따라가며 공부할 수 있다.
  * 특히 도움이 되었던 강의는 다음과 같다.
    * [이화여대 - 운영체제 강의](http://www.kocw.net/home/search/kemView.do?kemId=1046323)
      * 반효경 교수님 설명이 명쾌해서 이해에 많은 도움이 되었다.
    * [백석대 - 컴퓨터구조론 강의](http://www.kocw.net/home/search/kemView.do?kemId=613348)
      * 스터디 하면서 같이 활용했던 강의임.
    * [이화여대 - 컴퓨터 네트워크 강의](http://www.kocw.net/home/search/kemView.do?kemId=1046412)
      * 많이 듣지는 못하고 4분의 1 정도만 수강했는데, 굉장히 설명을 잘 해주셨던 기억이 난다.
    * [인프런 - 알고리즘 강의](https://www.inflearn.com/course/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B0%95%EC%A2%8C/)
      * 아무리 책을 읽어도 재귀에 대한 감이 잡히지 않는 분들은 이 강의를 들어보시는 것을 추천드린다.
* 오프라인 강의로 부족한 부분 보충하기 (알고리즘)
  * 7~8월에 [백준 오프라인 강의](https://www.acmicpc.net/lecture/57)를 수강했다.
  * 이 기간은 정말 바빴던 기억이 난다. 강의 듣고나서 필기한 내용 보고 복습하고 관련된 문제 풀이를 10~20개 이상 스스로 하면서 새벽에 잠드는 일도 많았고.. 어떤 날은 문제를 24개 풀었던 적도 있었다.
  * 후반부로 갈 수록 고급 알고리즘을 다루고 있었던 지라 복습을 다 따라가진 못했고, 아직까지 이해도가 부족한 영역도 제법 있다. (이후 기술면접을 보면서 중고급 알고리즘에 대한 이해도 부족을 뼈저리게 느꼈다)
    그렇지만, 알고리즘 문제 풀이에 흥미를 갖고 매일마다 문제를 풀 수 있게 되었던 것은 이 강의 덕분이라고 생각하고 있다. 실제로 이 기간동안 스스로 문제 풀이를 하면서 실력이 많이 늘었고 최백준님이 워낙 잘 가르쳐주셨기 때문에 '이 분을 내가 왜 이제서야 만나게 되었을까' 싶은 순간도 많았다. (특히 동적 프로그래밍에 대한 공포에서 벗어나게 되었을 때....!!)



이 외에도 공부하는 동안 여러가지를 했다. Outsider님이나 창천향로(jojoldu)님 같은 분들의 블로그를 보며 신기술 동향이나 각종 정리글 / 세미나 후기를 읽기도 했고, 자바 기본서를 읽으며 주 언어인 자바에 대한 이해도를 높이려고 노력도 했고.

아쉬운 점이 있다면 흔히 말하는 '추천 서적'을 성실하게 읽지 못했다는 것이다. 다 읽은 책도 있고 절반쯤 읽은 책도 많은데, 하반기에 읽거나 읽다 말은 책들은 다음과 같다.

* Clean Code
* CODE
* 자바로 배우는 리팩토링 입문
* 객체지향의 사실과 오해
* 컴퓨터 프로그램의 구조와 해석 (SICP)
  * 혼자 공부하면서 보려니 1장도 못넘어감..
* 실용주의 사고와 학습

이종립(기계인간)님 세미나를 들으면서도 느꼈지만, 주기적으로 이런 책들을 읽고 감상을 써봐야 할 것 같다. (막상 내년이 되면 아마 안할 것 같지만)



## 알고리즘 문제 풀이

하반기 공채를 다 떨어진 뒤에 충격(?)을 받아서 한달 정도 쉬었지만, 새해부터 다시 시작할 예정이다.

[백준 온라인 저지](https://www.acmicpc.net)를 처음 가입하게 된 것은 작년이었는데, 그 땐 뭣도 모르는 상태에서 문제 풀이를 했기 때문에 틀리는 일이 많았다. 슬랙 방에 계시는 분들이 자주 쓰시는 표현 중에 `맞왜틀`(맞았는데 왜 틀리죠) 이라는 것이 있는데, 2017년 초까지만 해도 내가 딱 그 표현을 많이 사용했다.

처음 시작했을 때만 해도 '코딩테스트를 성실하게 준비하자'는 마음가짐으로 했던 것이지만, 이후에 알고리즘 강의를 듣고 문제 풀이량이 늘면서 조금씩 생각이 바뀌게 되었다. 계획표에 설정한 목표가 300 문제였는데, 6월까지만 해도 진척이 별로 없다가 7월부터 매일마다 문제를 풀어가지고 목표를 초과 달성했다.

![BOJ 통계](/images/boj.png)

![BOJ Status](/images/boj2.png)



문제 풀이를 할 때는 다음과 같은 규칙을 세우고 지키려고 노력했다.

* 현재 내 수준에서 풀어야할 문제들을 최대한 많이 풀어나가면서, 주기적으로 어려운 문제에 도전하자
* 내 수준보다 쉬운 문제를 풀 때는 문제 풀이 갯수를 늘리기 위한 수단이 아니라, 실제 시험에서 실수하지 않는 연습을 하는 것이라고 생각하며 최선을 다하자. 만약 실수한 경우에는, 왜 실수했는지 반성해보고 다시는 그런 실수를 하지 않도록 노력하자

특히 많이 풀었던 파트는 BFS / DFS, 구현(시뮬레이션), 완전 탐색(브루트 포스) 이다. 다른 파트도 이래저래 풀긴 했지만 조금 부족하지 않나 싶고, 내년에는 잘 풀지 못하던 파트도 잘 해낼 수 있도록 애써야겠다는 생각이 들었다.

백준 온라인 저지 이외에는 다음과 같은 사이트를 활용했다.

* Codeforces
  * 대회 몇번 참가했는데 내 실력으로는 힘든 감이 있어서 지금은 하지 않는다.
* 구름EDU 모의고사
  * 코딩테스트 준비하면서 도움이 많이 됐다. 모의고사 여러번 치루면서, 전체 1위도 두번 해봄. (별로 의미없지만)
* 프로그래머스, codeup



취업 준비를 핑계로, 무언가 만들어보는 것보다는 문제 풀이를 많이 하며 지냈는데.. 그래도 재밌었으니 다행이라고 생각한다.

문제 풀이한 코드는 [여기](https://github.com/joshua-qa/PS)에 있다.

## 토이 프로젝트, 오픈소스 활동

반성해야될 점이 많은 항목이다.

나는 사실 가급적 많은 토이 프로젝트를 해보며 실력을 키워야할 시기였는데.. 여러가지를 핑계로 성실하게 하지 못했다.

개인적으로 불편함을 느끼거나 필요성을 느끼는 것이 생기면, 다른 사람이 만들어놓은 것을 찾아 쓰기 바빴고 그걸 굳이 내가 만들어서 써야하냐는 생각이 들었던 것이 사실이다. (지금은 이렇게 생각 안하지만, 여튼 좋은 개발자가 되기 위해서는 이런 생각을 하면 안될 것 같다)

내 실력이 생각보다 많이 늘지 않은 것은 이런 개인 프로젝트 활동을 성실히 하지 않았기 때문일 것이다.

그나마 해봤던 것은 다음과 같다.

* Github 커밋 알림 트위터 봇 (https://github.com/joshua-qa/JO-Commit-Bot)
  * 1일 1커밋을 목표로 정하면서, 매일 저녁마다 '오늘 몇개 커밋했어요'를 멘션으로 보내는 트위터 봇을 만들었다.
  * 필요한 라이브러리 끌어다 쓰면서, Javadoc이나 레퍼런스 문서들을 어떤 식으로 참고하는지 잘 습득하게 되었다.
* 개인 용도로 활용한 LINE 메신저 봇
  * 환경 세팅하고 봇을 가동하는 데까지 걸린 시간이 너무 많았다. heroku를 사용하거나, 아니면 내 개인 서버에 https 인증서를 세팅하고 그에 맞춰서 봇을 만들어야 했는데 인증서에 대한 이해도가 너무 떨어지는 바람에 공부를 많이 했다. (http://blog.devjoshua.me/2017/08/31/comodo-ssl-spring-boot/ 참고)
  * 봇 만들면서, line-bot-sdk가 얼마나 잘 되어있는지 느꼈다. 스프링 부트에 대한 약간의 경험도 할 수 있었고.
  * 그래도 한 번 만들어 놓으니까, 필요한 기능 생길 때마다 갈아 끼우기는 참 좋다. 너무 잘 만들었다고 생각하고 있다!
    * 지금은 `소녀전선`이라는 게임의 인형 제조 정보를 조회하는 용도로 쓰고 있다.
* 콘솔 카드놀이 게임 (https://github.com/joshua-qa/Java-CardGame)
  * OKKY의 fender님이 쓰신 [이 글](https://okky.kr/article/358197)을 보고 3월 쯤에 콘솔 카드놀이 게임을 작성해봤었다.
  * 윈도우에서 흔히들 하던 기본게임 (솔리테어라고 부르는 게임)을 콘솔로 할 수 있도록 구현했고, 이 프로젝트를 하면서 '그래도 내가 작은 프로그램을 만들 수 있게 되었구나' 같은 생각을 했다.
  * 막상 이 글에서 요구하는 객체지향 모델링 방법을 충실하게 이행하지는 못한 것 같지만.. 그래도 어느 정도 공부하는데 도움됐다고 생각한다.
* HTTP 서버 간단하게 만들기 (https://github.com/joshua-qa/web-application-server)
  * 나 혼자서 처음부터 끝까지 만든 프로젝트는 아니다.
  * [자바 웹 프로그래밍 Next Step](http://www.yes24.com/24/Goods/31869154?Acode=101)이라는 책에서 이 것을 해보라고 과제로 내주셨길래, 흥미가 생겨서 Clone을 해온 뒤 바로 코딩을 했었다.
  * 뼈대만 있는 웹 서버에 HTTP 요청을 응답할 수 있도록 구현하는 것이었고, 이 과정에서 공부한 것도 제법 있었다.
  * '나 그래도 이제 자바 책 한권 정도는 다 본 것 같다' 싶으신 분들이 해보면 재밌을 프로젝트라고 생각한다. (시간도 얼마 안걸림)



오픈 소스 기여는 딱 하나 했다. 평소에 자주 쓰던 프로그램인 [Tweetdeck Player](https://github.com/sokcuri/TweetDeckPlayer) 에 대한 이슈 등록 및 PR 2건.

* https://github.com/sokcuri/TweetDeckPlayer/pull/104
* https://github.com/sokcuri/TweetDeckPlayer/pull/121

편리한 트위터 클라이언트를 만들어준 sokcuri 및 컨트리뷰터 분들에게 감사 인사를 전한다.



## 1일 1커밋, 그리고 학습에 실패한 경험

막상 1일 1커밋을 목표로 잡았지만, 다른 분들처럼 까탈스러운 규칙을 정하고 실천한 것은 아니었다.

그냥 '이 목표를 잡아두면 그래도 매일마다 무언가 하지 않을까'라는 생각으로 정했던 것이고, 그 결과는 다음과 같다.

* 그날 커밋을 안한 경우, 저녁 11시 40분쯤 되면 다급해지는 나의 모습을 발견할 수 있었음
* 단순히 1일 1커밋을 채우기 위해 블로그 포스팅이나 TIL을 작성한 경우도 많았음
* 알고리즘 문제 풀이를 제외하면 과연 코딩을 몇 번이나 했을까 싶은 상태

이대로는 안되겠다 싶어서 중간에 바꾼 것이 다음과 같다.

* 매일마다 블로그에 작성하던 TIL (이라고 쓰고 일기장이라고 읽는다) 을 주간 회고로 바꾼다.
* 배운 것에 대한 정리를 TIL 리포에 커밋한다.



한 가지 재미있었던 점은, 내 블로그를 우연히 발견하신 분께서 비슷한 방식으로 TIL 작성을 실천하기 시작하셨다는 것이다.

이후 후기를 읽어보니 그 분은 같이 스터디를 진행하던 분들이 계신 업체에 취직하셨다고 하는데, 그 때 댓글 주고받고 나서야 내 블로그를 보셨다는 것을 알게 되었고 더욱 분발해야겠다는 생각이 들었다.

2월에 스키장을 다녀오면서 하루 끊긴 뒤로, 11월까지 276일동안 커밋을 했다. 그 이후에는 한달 쉬었다. 면접 보러 다니면서 충격 받은 것도 있었고, 의미가 없다고 느낀 것도 있었기 때문이다.

솔직히 말해서 1일 1커밋이라는 목표를 잘 세우고 실천 한다면.. 충분히 많은 도움이 될 것이라고 본다. 그렇지만 나는 '매일마다 커밋을 했다'는 것을 보여주기 위한 활동이 제법 많았고 (당시에는 그렇지 않았다며 스스로 부정했지만) 지금 생각해보면 아주 부끄러운 일이다.

**여러분은 저처럼 하시면 안됩니다. 정말로요. 이 회고는, 정해놓은 목표를 잘못된 방식으로 실천한 사람의 '실패한 이야기'입니다.**



![commit](/images/commit.png)



얼마전에, [학습에 실패한 이야기](http://woowabros.github.io/experience/2017/12/11/how-to-study.html)라는 글을 읽고 눈물을 흘릴 뻔 했다. 내가 왜 학습에 실패했는지 이 글을 보고나서 뼈저리게 느꼈기 때문이다. 내년에는 올해 실패한 경험을 바탕으로 삼아 더 올바르고 효율적인 학습을 하려고 한다.

## 세미나, 컨퍼런스 참석

'개발자 행사 많이 가야지~' 라고 큰 소리 쳐놓고 실상 세번 밖에 못갔다.

* NDC 2017
* DEVIEW 2017
* 이종립(기계인간)님 세미나 (https://okky.kr/article/425700)



## 취업 

상반기에 부스트캠프 2기 및 우아한 테크캠프를 떨어지고, 이래저래 준비를 한 끝에 하반기에는 가고 싶었던 회사들에 지원하게 되었다.

어떤 회사 같은 경우는 최종 전형에서 떨어지기도 했고, 제일 가고 싶었던 회사는 기술 면접에서 처참하게 털린 뒤에 불합격했다. 덕분에 한동안 좌절감에 휩싸이기도 했던것이 사실이다. '내가 아직 개발자가 되기 위해서는 많이 부족하구나' '다른 사람에 비해 실력이 한참 딸리는건 아닐까' '너무 운이 없었다' 같은 생각을 하며, 자신을 되돌아보는 한달을 보냈다.

다행히 [이브레인](http://ebrain.kr)의 도움을 받아 [푸드테크](http://foodtechkorea.com/)에 지원하게 되었고, 최종 합격해서 다음주부터 출근하게 되었다!

굉장히 많은 것을 배우고 경험할 수 있는 기회를 얻었기 때문에, 2018년에는 더더욱 최선을 다하려고 한다.

부족한 나에게 많은 도움을 주신 이브레인 담당자 분들께 정말 많이 감사하다는 말씀을 드리고 싶다.



## 아쉬웠던 점 (반성해야할 점)

중간에 아쉬웠던 점을 어느 정도 썼지만, 한번 더 정리해보려고 한다.

* 공부한 것들을 블로그에 잘 정리하지 않았다
  * 유명한 분들 블로그를 보면, 이게 정말 잘 되어있다. 스스로 어떤 것들을 해봤으며 그걸 하면서 어땠는지, 다른 사람들에게 어떤 것을 알려주고 싶은건지가 잘 느껴지는 글을 써주신다.
  * 나 같은 경우는 거의 일기장 용도로 활용한 것 같다..
* 개인 프로젝트 하는 것에 소홀했다
  * 토이 프로젝트 조금 해본 것 빼고는 규모 있는 프로젝트를 거의 겪어보지 않았다.
  * 내 지인 중에 소프트웨어 관련 마이스터고를 다니면서 수십개의 토이 프로젝트를 해온 지인이 있는데, 연말에 이 분을 보면서 참 많이 반성했다.
* 다른 사람과 스터디 하는 것에 크게 관심두지 않았다
  * 혼자서 공부해도 어떻게든 잘 될거라고 생각했다. 앞으로는 기회가 많이 있을지 모르겠지만, 다른 사람과 스터디 하는 것도 많이 생각해봐야겠다.
* 자신이 얼마나 잘 이해하고 있는지 제대로 측정해보지 않았다
  * 기술면접 준비하면서 이 것 때문에 엄청 힘들었다. 공부하는 당시에 이런걸 별로 신경 안쓰고 넘어가니까, '알고 있다고 생각하는 것'들이 명확하게 떠오르지 않는 것을 자주 느낄 수 있었다.
  * 전날 공부했던 것에 대해서 스스로 가벼운 질문을 던져보고, 그에 대해서 얼마나 떠올려서 답변할 수 있는지 체크하는 것이 중요한 것 같다.
* 관련된 내용을 다 알고나서 도전하려고 했다
  * 개인 프로젝트가 소홀했던 것과 관계 있는 내용인데, 절대 해서는 안되는 실수를 저질렀다고 생각한다.
  * 만들어보면서 배우는 것이 중요한데, 관련된 이론을 다 공부하고나서 무언가를 만들어보려고 하니까.. 시간이 지나보니 달성한 것이 없었다.




## 결론


잠시 트위터에서 봤던 이야기를 써보고자 한다.

> '왜 성공한 이야기에 대한 책은 있고 실패한 이야기에 대한 책은 안나오나요?'
> '저희 출판사에서 출간했는데 폭망하였습니다. ^^'

(원본 : https://twitter.com/dulnyouk/status/723162895509385219)



내가 쓴 이 회고도 어찌보면 반성해야될 내용만 가득하고, 학습에 실패한 이야기뿐이라서 다른 사람이 보기엔 재미없을 것 같다.

그래도 여러분께 한가지 전하고 싶은 메시지가 있다.

**'저의 2017년 모습처럼 공부하지 마세요. 더 잘하실 수 있을겁니다.'**

분명 열심히 했고, 얻은 것도 많고, 취업도 성공했다. 좋은 사람들도 많이 만났다. 내 스스로 아쉬움을 많이 느끼는 것 뿐이다.

신입 개발자로서 새로운 회사 생활을 하게된 만큼, 2018년은 반짝반짝 빛나는 사람이 되고 싶다.

올 한해 응원해주신 모든 분들께 감사합니다!

