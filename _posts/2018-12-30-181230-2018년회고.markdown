---
layout: post
title: 2018년 회고
date: 2018-12-30 01:39:34
tags: Daily
categories: Daily
---

어느새 회고 쓸 시간이 찾아왔다는 것이 놀랍고 시간이 빠르다는 걸 느낀다.

이번 회고는 작년보다 재미가 없으니 미리 양해 부탁드립니다.



## 회고를 시작하며

2017년이 개발자로 전직하기 위해 애썼던 한해였다면, 2018년은 한 명의 개발자로서 어떻게든 밥값을 하려고 발버둥친 한해였다고 볼 수 있겠다.

한 때 미친듯이 즐겼던 WoW라는 게임에서, 항상 즐겨하던 말이 있다.

> 다른 공대원(레이드 파티원)들에게 민폐 끼치지 않으려면 1인분은 해야죠 :)

바로 그 1인분을 하기 위해 올 한 해 많은 노력을 해왔고, 어느 정도는 성과를 거둔 것 같아서 다행이라고 생각하고 있다.

우선 회사에서 어떤 일이 있었는지 써보고, 개인적으로 했던 활동에 대해 적어보려고 한다.



## 개발자로 첫 시작!

푸드테크를 1월 2일에 입사한 뒤, 많은 기대와 걱정거리들이 공존하고 있었다.

QA 경험 덕분에 개발 조직이 어떤 식으로 굴러가는지에 대한 이해는 있었으나, 개발자로서는 첫 시작이었기 때문에 ㅠㅠ '잘 해낼 수 있을까?' '나 수습 짤리는거 아니겠지?'라는 생각을 입사 전부터 하게 됐다.

물론 그런 걱정을 많이 해봤자 쓸모 없다는 것도 잘 알고 있었고, '아무리 그래도 신입인데 잡아먹기까지나 하겠어? 눈에 보이는 모든걸 습득하자!'라는 마음가짐으로 출퇴근을 했다.

입사 후 처음 배치 받은 팀은 '배달관제팀'이라는 부서였다. 이름부터 너무 생소했지만, 새로운 프로젝트를 많이 진행할 것이라는 설명을 들으며 큰 기대를 갖게 됐다.

이 팀에서 맡게 된 업무는 다음과 같다.

* 배달대행 중개 API 서버 유지보수 및 리뉴얼 업무
  * 위 업무에 필요한 신규 API서버 개발 (주소 정제 API, 050 안심번호 API 등)
* 배달대행 중개 서버 관련 각종 운영 업무
  * 배달대행 사용하는 매장 관련 등록, 수정, 해지 지원
  * 신규 대행사 생길 때마다 연동 개발 업무
  * 매장 CS 발생 시 로그 확인 등
* D모 배달대행 서비스 개발 (현재는 서비스 종료)



처음 입사하자마자 이 업무를 다 한 것은 아니고, 개발 환경 세팅 + 적응이랑 기술 공부부터 했다.

환경 세팅이나 적응 같은 경우 Redmine, Confluence, Slack, IntelliJ IDEA 모두 충분한 사용 경험을 갖추고 있었기에 큰 어려움은 없었고 CentOS 사용법만 조금 익히면 되는 정도였다. (맨날 우분투만 써서 CentOS가 쪼끔 어색했다)

팀장님과 첫 면담을 하면서 파일럿 프로젝트에 대한 얘기가 나왔는데, 1~2주 정도 RxJava를 공부해보고 해당 기술을 사용하여 프로젝트를 진행해보면 좋겠다는 말씀을 하셨다.

그래서 RxJava랑 Spring Boot를 중점적으로 봤고, 옆 자리 팀원 (99년생)과 함께 파일럿 프로젝트를 시작하게 되었다.



## 파일럿 프로젝트

신입으로 회사를 들어가면 게시판을 만들어보라고 시킨다는 이야기를 많이 들어왔기에, 나도 그럴 줄 알았었다.

하지만 실제로 받게 된 프로젝트 주제는 '주소 정제 API 서버'였다.

사용 기술은 Spring Boot 2.0 + RxJava2.

푸드테크에서 서비스하는 POS 프로그램은 `배달대행 호출 기능`이라는 것이 존재하는데, 이 호출 기능을 사용할 수 있도록 해주는 뒷 배경에는 배달대행 중개 API 서버가 있다.

배달대행 중개 API 서버는 POS에서 매장 주소랑 배달지 주소 찍어서 요금 조회하고, 배달대행 호출할 수 있도록 중간에서 도와주는 서버다. POS에서 지정된 규격으로 요청을 주면 서버는 그걸 받은 뒤에, 해당 매장이 사용하는 배달대행 업체의 API로 요청을 보내서 결과를 받아오는 식이다.

이 과정이 원활하게 이루어지면 참 좋겠지만, 주소 관련해서 문제가 많이 발생했었다고 한다. 주로 POS 프로그램의 주소 입력란이 너무 자유로워서 발생하는 문제들........

문제에 대한 자세한 내용을 쓰기에는 너무 길어지니 여기에는 쓰지 않으려고 한다. 어쨌든 이 문제를 100%는 아니더라도 최대한 많이 해결하기 위해 API서버를 새로 만들게 되었다. 한 번 잘 만들어놓으면, 다른 서비스 혹은 특정 데이터 정제 과정에서 해당 API 서버를 활용할 수 있을거라는 생각도 들어서 더 열심히 하려고 노력했던 것 같다.

솔직히 RxJava는 책 보면서 일일히 실습할 때도 그렇고 전혀 익숙하지 않았기에 파일럿 프로젝트에 얼마나 써먹을 수 있을지 자신이 없었다. 처음에는 마블 다이어그램을 보고 제대로 이해하는 것 마저도 어려웠을 정도니까 말이다. (지금도 Rx에 대해 설명해보라고 하면 제대로 설명할 자신이 없다)

| ![마블다이어그램](/images/diagram.png) |
| :----------------------------------------------------------: |
| *처음엔 진짜 뭔 소린지 몰랐다.... ㅠㅠ (이미지 출처 reactivex.io)* |

다행히 지인 분의 도움과 각종 사이트 + 책의 도움을 받아가면서 필요한 부분에 잘 적용할 수 있었고, 코드 리뷰와 리팩토링 과정을 거치면서 기간 내로 프로젝트를 완료할 수 있었다.

프로젝트 기간 2주 동안 코드 리뷰만 네 번 받을 정도로 빡세게 관리를 받았는데, 처음 두 번은 내가 작성한 코드를 거의 다 삭제하고 다시 작성할 정도로 지적을 많이 받았던 것이 기억난다.

혼자 코딩 할 때만 해도 '이 정도면 잘했지!'라는 생각을 하곤 했었는데, 막상 코드 리뷰를 받아보면 맘에 드는 코드가 단 한 줄도 없었다. 그래도 나름대로 두뇌 풀가동을 한 끝에 마지막 코드리뷰에서는 제법 좋은 평가를 받아서 기분이 좋았다 :)

개발기간 동안 큰 도움이 되었던 책이 있는데, 바로 한빛미디어에서 나온 [RxJava 프로그래밍](http://www.yes24.com/24/Goods/45506284?Acode=101) 책이다. RxJava에 대해 아무것도 모르는데 공부를 해야 되는 경우, 이 책이 매우 도움 될 것이라고 생각한다.

프로젝트 완성 이후 운영 환경에 배포를 하고, 실제 사용되는 모습을 보고 나니 기분이 엄청 묘했다.

QA로 일하던 시절에도 운영 환경에 배포가 된다고 하면 긴장을 많이 했었는데, 내가 만든 서비스가 운영 환경에 배포된다는 것은 그것보다 몇 배나 긴장되는 순간이었던 것이다. 고작 파일럿 프로젝트였지만 말이다.

여튼 이 경험을 통하여 '나도 개발자로서 뭔가를 만들 수 있구나'라는 자신감이 조금은 생겼으며, 이 서버는 지금까지도 별 문제 없이 잘 굴러가고 있다. 프로젝트 끝낸 뒤로 회고를 작성한 것이 있는데 사내 위키에 작성한 것이기 때문에 외부에는 공개하지 않으려고 한다.

짧은 기간 동안 많은 분들의 도움을 받았으나 특히 기억에 남는 분들을 꼽자면, 같이 프로젝트를 진행한 팀원과 RxJava 학습에 필요한 자료들을 제공해주신 이하제님 (Realignist), 그리고 몇 번이나 꼼꼼하게 코드리뷰 해주신 당시 팀장님이다.



위에도 살짝 언급했지만, 난 아직도 Rx에 대해 설명해보라고 하면 제대로 설명할 자신이 없다. 엄청 부끄러운 일이다. ㅠㅠ

내년에 다시 봐야하나...??



## 즐거운 회사 생활

첫 번째 파일럿 프로젝트가 끝난 뒤에도 각종 과제를 수행하며 조금씩 회사에 적응해 나가고 있었다. 다른 팀원들에게 민폐를 끼치지 않기 위하여 이래저래 노력을 했는데, 주로 아래와 같은 것들을 했다.

* 30분~1시간 정도 일찍 출근해서 사내 컨플루언스 다 읽어보기 + 레드마인(나중에는 JIRA로 바뀜) 읽어보기
  * 이전에는 어떤 업무가 있었고, 관련해서 내가 파악해야할 용어나 히스토리는 어떤 것들이 있는지 많이많이 알고 싶었다. 옆자리 팀원에게 '이거 왜 이런거에요? 이게 뭔 소리에요??' 하고 물어봐도 됐지만... 무작정 물어보는 것 보다는 도저히 모르겠다 싶을 때 물어봐야 된다고 생각했다.
  * 이 짓을 몇 달이나 하고나니, 거의 모든 항목을 찾아서 읽게 되었고 업무에 필요한 지식이나 히스토리를 상당수 파악할 수 있게 되었다. 신입 사원인 나에게 있어 컨플루언스는 아주 소중한 자산이었다. 나중에는 팀원들이 '그거 어디 올라와 있더라?' 하는 것에 대해 내가 답변할 수 있을 정도가 되었다.
* 남는 시간에 담당 프로젝트 코드, 커밋 로그 다 읽어보기
  * 지금 당장 맡고 있지 않은 업무일지라도 최대한 코드를 읽어보려고 애썼다. 점심시간에 일 하지 마라고 하시는 분들도 계셨지만, 코드 읽는건 재밌으니까요? :) 가끔은 주말에 집에서 할거 없을 때도 읽어봤다.
  * 이 과정을 통해 다른 사람들이 어떤 식으로 일하고 있는지 알 수 있었고 (커밋 쪼개는 단위, 네이밍 등) '이런건 어떻게 구현했을까?'라는 개인적인 의문들을 많이 해결할 수 있었다.
* 클린 코드에 관련된 책 읽기 (Clean Code, 리팩토링, 그외 ...)
  * 코드 리뷰를 몇 번 겪어보고 제일 크게 느낀 점은 '이렇게 내 코드가 더러워서야 다른 사람이 읽을 마음이 생기겠냐!'였다.
  * 변수명 a,b,c로 네이밍하고 if else 떡칠로 모든걸 해결할 정도의 무식한 짓은 하지 않았지만.. 그래도 최소한 사람이 읽기 편한 코드를 작성해야 된다는 마음에 책을 읽고 조금씩 연습했다.

지금 와서 이 때를 돌아보면, 나는 운이 참 좋았다고 생각한다.

별다른 압박을 받지 않고 이러한 활동들을 자유롭게 할 수 있었으며, 여러 고수 분들께 도움 받으며 성장할 수 있었던 것이다.

여기서 그 고수 분들을 소개해보려고 한다. (몇몇 분들은 이직하심)

* 부사장님
  * 개발을 하시는 분은 아니었지만 개발 조직의 업무 방식을 스마트하게 바꾸는데 많은 노력을 기울이셨고, 어떤 마음가짐으로 업무를 수행해야 하는지에 대해 적지 않은 조언을 해주셨다.
* CTO님
  * N사 -> T사를 거쳐 CTO로 오셨는데, 개발하다가 막히는게 있으면 다들 이 분을 찾아갈 정도로 다양한 경험과 지식을 갖고 계셨다. '내가 알고 있는 것은 정말 별거 아니구나' 싶을 정도로 그 깊이가 매우 깊어서, 나중에 이런 개발자가 되어야겠다고 생각하게 되었다.
* 당시 팀장님 (조직 개편 이후에는 파트장님)
  * 개발 스킬로는 CTO님 못지 않은 분이다. 입사 초기부터 지금까지 내 옆에서 많은 것을 도와 주셨고, 이렇게까지 나에게 무언가 깨달음을 주기 위해 애쓰신 분이 내 인생에서 몇 명이나 되었을까 싶다.
* DBA님
  * 어지간히 느려터진 쿼리도 이 분의 손을 거치면 이쁘게 별모양으로 튜닝되곤 했다. DB 이중화 구성 및 각종 작업을 문제 없이 수행하셨던게 기억난다.
  * 심심할 때마다 '이거 쿼리 한번 짜보라'면서 과제를 내주기도 하셨는데, 덕분에 이전보다 쿼리 짜는게 좀 익숙해졌다.

회사에 가지 않고 혼자서 공부했으면 배우지 못했을 것들도 이 분들을 통해서 많이 배우게 되었다고 생각한다.

이후 여름이 될 때까지 회사에서 몇몇 프로젝트를 진행했는데, 그 목록은 아래와 같다.

* 050 안심번호 API 서버
  * Spring Boot 2 + Reactor-Netty 사용

  * 일반 전화번호 (집 전화번호 or 휴대폰 번호) 를 안심번호로 매핑해주기 위해 만든 서버다. 각 서비스별로 일일히 구현해주어도 되겠지만, 모든 서비스가 같이 사용할 수 있는 API 서버가 있다면 그럴 필요가 없기 때문에 해당 프로젝트를 진행하게 되었다.

    외부 업체 API는 TCP 소켓 통신으로 되어있고 각 서비스들의 요청은 HTTP로 들어오기 때문에 어떤 방식으로 서비스를 구축할지 고민했는데, netty를 비교적 적은 설정 + 짧은 코드로 사용할 수 있는 [Reactor-Netty](https://github.com/reactor/reactor-netty)라는게 있다고 팀장님이 가르쳐주셔서 사용하게 되었다.

  * Reactor-Netty 관련 자료가 당시에는 별로 없었기에 꽤 고생했던 기억이 난다. github repo에서 테스트 코드를 읽어보는 것이 상당히 도움 되었음. (https://github.com/reactor/reactor-netty/tree/master/src/test/java/reactor/netty)

    * 영어로 된 자료 뿐만 아니라, [일본어로 된 자료](https://blog.ik.am/entries/438)도 찾아볼 정도로 열심히 참고 자료를 찾아본게 기억에 남는다.
  * 비동기 처리에 대한 이해도가 떨어지는 상태였기에 예외 처리하면서 많이 애먹었다. 이걸 해결하면서 CountDownLatch, CompletableFuture 등을 사용해보게 됐고, 현재까지 장애 발생 없이 잘 서비스하고 있다.
    * 도움 받은 글 : https://www.hungrydiver.co.kr/bbs/detail/develop?id=2
      * CompletableFuture에 대한 감을 잡을 때 정말 도움이 많이 되었다.

* 배달대행 중개서버 고도화(리뉴얼) 프로젝트

  * 여기와서 했던 프로젝트 중에서 가장 규모가 큰 프로젝트였다.
  * 기존 레거시 서버가 구조상의 결함 발견 및 메모리 누수가 발생하고 있었기 때문에 리뉴얼해야할 필요성이 대두되었고, 파일럿 프로젝트를 같이 진행했던 옆 자리 팀원(99년생)과 함께 리뉴얼을 하게 되었다.
    * 물론 그렇다고 해서 단 둘이서만 진행하진 않았다. 팀장님과 CTO님이 주기적으로 코드리뷰 시간을 진행해주셨으며, gitlab 댓글을 통해서도 코드리뷰를 해주셨다. DBA님도 DB 구조 관련해서 많이 신경 써주셔서 크게 어려운 점은 없었다.
  * 여러모로 순조롭게 흘러갔지만, 한 가지 문제가 있었으니 바로 나의 미숙함이었다. 먼저 할당량을 완성해놓고 리팩토링을 진행해서 코드를 깔끔하게 만들 생각을 했어야 하는데, 처음부터 깔끔하게 만들려고 하다보니 시간이 오래 걸렸다. 덕분에 프로젝트 일정이 지연되는 원인을 제공하고 말았다.
  * 우리 팀은 코드 중복을 참 싫어했고, 기존 레거시 서버에서 이런 코드가 많이 발견되는 것에 아쉬움을 가지고 있었다. 그래서 리팩토링을 하는 도중에는 이 것에 초점을 많이 두고 작업을 했던 것이 기억난다.
  * 참 아쉬운 점이 있다면, 결국 이 프로젝트는 QA 돌입하기 전에 중단되었다. 회사 내부 사정으로 인한 문제가 있었고 결국 기존 레거시 서버를 쭉 운영하고 뜯어고치는 업무를 받게 되었다.

* D모 배달대행 서비스 유지보수

  * 이미 팀장님과 프리랜서 과장님 한 분이 담당하고 계셨기 때문에 내가 할 일은 많지 않았다. 다만 이 서비스가 잘 나갈 때 두 분이서 개선사항 쳐내느라 많이 바쁘셨고, 그 때마다 투입되어서 도와드리게 되었다.

  * 위에 적었듯이, 지금 당장 맡고 있지 않은 업무일지라도 최대한 코드를 읽어보려고 애썼고 그 습관이 크게 도움을 받은게 바로 이 업무를 할 때이다.

    배달대행 서비스를 처음 봤을 때에는 별거 아닌 줄 알았지만, 실상 그 내부를 뜯어보면 꽤 복잡하다.

    D 서비스를 기준으로 유지보수 필요한 것들을 나열해보면 다음과 같다.

    0) API서버

    1) 센터(지사)용 웹 페이지

    1-1) 센터(지사)용 안드로이드 앱

    2) 가맹점(매장)용 웹 페이지

    2-1) 가맹점(매장)용 안드로이드 앱

    3) 라이더용 안드로이드 앱

    4) 라이더 위치 확인용 로케이션 서비스

    그리고 Redis 서버도 하나 굴러가고 있었다. 여튼 전체적으로 알아야될 부분도 많고, 코드도 처음엔 이해하기 힘들었던 기억이...

  * 간단하게나마 안드로이드 앱도 고쳐보고, 웹 프론트도 건드려보고 백엔드도 건드려보고. 참 재밌는 프로젝트였는데 내부 사정으로 인하여 아쉽게도 서비스 종료했다.

## 처음엔 재밌었던 운영 업무

여름부터 배달대행 중개 서버 관련 각종 운영 업무를 맡게 되었다.

위에서 나열했던 업무들도 하고, 기존 레거시 서버 뜯어고치는 업무도 하게 되어서 부담감이 컸던 것이 사실이다.

(레거시 서버는 netty + spring 4 조합이었음)

수 백 개의 매장이 배달대행 호출 기능을 거의 매 시간 사용중이었기 때문에 배포 가능한 시간도 한정되었고, 실수라도 해서 운영 환경에 배포가 잘못된다면 이 서비스와 관계된 많은 분들 (업주 분들, 대행사, 업주 분들의 CS를 처리하게 될 고객센터 등)이 고통받는 결과를 낳을 수 있어서 꼼꼼하게 확인하고 작업해야 했다.

그래도 24시간 내내 굴러가는 서비스들에 비하면 우리는 조금 여유 있었다고 생각한다. 아직까진 초당 수천건씩 요청이 쏟아지는 일도 없었고, 보통 오전 9시~11시에 배달대행 호출 하는 일은 거의 없어서 이 시간에 배포를 진행하면 문제가 없었다.

(처음에는 새벽 4시~오전 11시까지 안전했으나, 나중에 가맹점이 늘어나면서 오전 7~8시에도 배달대행 호출이 들어왔다)

생각보다 운영 업무를 위해 알아야 될 내용이 많았던지라, 처음에는 질문할 것도 많았고 다른 부서에서 뭔가 요청하셨을 때 빠르게 처리를 못해드려서 많이 죄송했다. 다행히 옆 자리 팀원의 많은 도움으로 금방 적응할 수 있었고 이 서비스를 정말 내 자식처럼 생각하고 일할 수 있었다.

일하면서 꼭 가져야한다고 생각하는 마인드가 있다면 '서비스를 내 자식처럼 생각하자'이다. (물론 내가 그러고 싶다는 것이지, 다른 사람이 꼭 이런 마인드를 가져야한다는 것은 아니다)

장애없이 서비스를 유지하고 코드를 깔끔하게 짜려고 노력하고, 신규 제휴 맺은 대행사 들어오면 연동개발 작업하고 커뮤니케이션 하고~ 이런 작업들을 하면서 늘 저 마인드를 유지하기 위해 애썼다.

조금 여유가 생긴 뒤에는 나름 재미가 있었기에 그동안 신경쓰지 못했던 부분에 대해서도 챙기려고 했다. 예를 들면 배달대행 중개 서버를 이용하는 푸드테크 POS 프로그램들의 사용법을 상세히 익히고, 각각 써보면서 우리 서버가 제공하는 서비스들이 POS에서는 어떻게 활용되는 것인지 학습하기도 했다.

운영을 하다 보면 이런 일도 있다. 푸드테크 POS의 배달대행 호출 기능을 사용하시던 업주 분이 대행사 측에 연락 후 POS 배달대행 사용 기능을 문의하실 때가 있는데, 이 경우 정식 프로세스를 거쳐서 다른 분이 답변해주실 수도 있지만 '좀 급한 건'의 경우 내가 개인적으로 답변해드릴 때도 있었다. 이런 상황에서 POS 프로그램 사용법을 내가 모르면 답변해드리는데 시간이 오래 걸리기 때문에 그런 일을 줄이고 싶었고 사용법을 익힌 뒤로는 도움이 많이 되었다.

운영 업무를 하면서 재밌었던 점이 또 있다면, 각종 배달대행사 개발자 분들과 커뮤니케이션을 하며 연동개발하는 경험을 할 수 있었고... 정말 다양한 API 구조들을 봤다. 바XX, 생XXX, 부X 등의 메이저 서비스를 만드시는 분들과 뭔가 같이 작업할 수 있었다는 점에 대해 지금도 대단히 영광이라고 생각하고 있다.



처음에는 업무가 마냥 재밌었지만, 나중으로 갈수록 지루한 면도 있었다. 아무래도 같은 일이 반복되다 보니 무언가 새로운 시도를 하고 싶을 때도 있고, 커뮤니케이션하면서 애를 먹을 때에는 운영 업무 그만하고 싶다는 생각도 조금씩 들었다. (근데 이건 솔직히 어쩔 수 없는것 같다)

여튼, 옆에서 도와주는 사람이 있었기에 12월까지 큰 문제 없이 운영 업무를 진행할 수 있었고 특별히 늦게 퇴근하는 일 없이 개인적인 활동을 할 시간을 마련하게 되었다.



## 개인 활동 및 스터디

운영 업무를 한 뒤로는 장애가 터지지 않는 이상 워라밸이 보장되었고, 이 기간 동안 아래와 같은 활동을 하려고 노력했다.

* 조금이라도 매일마다 운동하기 (다이어트)

사실 나는 다른 사람들이 매우 걱정할 정도로 배가 많이 나온 편이었다.

군 복무 당시에 63kg 이었던 체중도 79까지 증가했는데, 덕분에 일상 생활에 아주 조금은 지장이 있었고 어느 날부터 특별한 계획 없이 운동을 시작하게 되었다.

물론, 운동이라고 해서 대단한 것을 하진 않았다. 정말 열심히 걸어 다녔다. 다른 건 재미 없었지만 빨리 걷기 만큼은 언제 해도 재미있고 오래할 수 있었다.

회사 위치가 국회의사당 역이라서 평상시에는 9호선 일반열차를 타고 출퇴근 했었는데, 이 때부터는 급행을 타고 여의도역에 내려서 회사까지 걸어갔다. 얼마 안되는 것 같아도, 걷는 시간을 늘리는 효과가 상당히 있었다. (매일마다 여의도 공원을 구경하는 재미도 있었고)

점심 시간에 여유가 있을 때는 하루도 안 빼먹고 나가서 여의도 공원을 돌고 왔다. 나중에 점심시간이 단축된 뒤로는 잘 하지 않았으나, 이 때 열심히 노력한 덕분에 3~4km 정도는 귀찮다는 느낌 없이 걸어 다닐 수 있게 되었다.

작년만 해도 1km 이상 걷는 것을 귀찮아 했다는 걸 생각하면, 이 것도 매우 큰 발전이었다.

여의도 공원 산책길 기준으로 크게 한바퀴 돌면 2.5km 정도 되는데, 이 코스를 25분 이내로 걷는 것이 내 목표였다. runkeeper 앱으로 속도를 재면서 걸으니 더욱 재밌었고, 새로 핀 꽃이나 매일같이 나와서 나처럼 걷는 분을 발견하는 재미도 소소하게 있었다.

걷기라고 해서 절대 대충 걷지는 않았고, 최대한 빠른 속도로 걷는 것에 중점을 두려고 했다. 처음에는 시속 6km를 목표로 하고, 나중에는 사람이 뜸한 길에서 7km까지 목표로 잡아보기도 했다. (여름, 가을에 이러니까 진짜 덥고 힘들긴 했다)

평일 저녁이나 주말에는 시간이 더 많이 남는지라 8~12km 정도의 거리를 걸어 다니기도 했다. 특히 기억에 남는 날이 있다면 주말에 한강 공원이 가고 싶어서 걸었던 날이 있다. 당시 거주중이던 신논현 자취방에서 잠원 한강공원까지 걷고, 산책길을 쭉 따라서 여의도 (샛강역 인근)까지 걸어왔다. 그동안 서울에 살면서도 보지 못했던 풍경을 조금이나마 보면서 많은 생각을 했던 기억이 난다.

나중에는 빨리 걷기가 익숙해져서 달리기를 해도 좋겠다는 생각을 했다. 다만 점심 시간에 달리기를 했다가는 회사에 있는 다른 사람들에게 민폐가 될 수 있기 때문에 점심은 걷기만 했고 저녁 시간을 활용하여 자취방 근처 산책로에서 달리기를 했다.

운동을 하게 된 것은 다이어트가 목적이었기 때문에, 어느 정도의 식이 조절도 병행하게 되었다. 쓰리케어에서 다이어트용 도시락을 주문해서 몇 주간 그것만 먹거나, 닭가슴살 + 계란을 먹고 비타민제를 사서 매일마다 한 알씩 먹기도 했다.

회사에서 점심 먹을 때는 공기밥을 절반만 먹는 걸로 습관을 들이고, 집에서는 밥을 끊고 오트밀을 사서 당이 거의 안 들어간 두유 (혹은 저지방 우유)에 말아서 먹었다. 참 다행인 점이 있다면 내가 오트밀이랑 닭가슴살을 질리지 않고 열심히 먹었다는 점이 있겠다. 아직도 자취방에서는 대부분의 저녁 식사를 오트밀 + 두유 + 닭가슴살로 해결하고 있다.



그래서 결과가 어떻게 되었냐구요?

연초 : 79kg

12월 1일 측정 : 71.8kg

12월 27일 건강검진 측정 : 70kg

배도 완벽하지는 않지만 상당히 들어갔다.

오랜만에 만나는 사람들이 내 모습을 보고 살이 많이 빠진거 같다며 신기해하는 모습을 보곤 했고, 그런 반응을 볼 때마다 더욱 의욕이 생기게 되었다. 내년에는 65kg까지 빼는 것이 목표다.



* 책 읽기

책은 나름대로 많이 읽으려고 노력했으나, 사놓고 20%~50% 정도 읽은 책이 많다.

100% 읽은 책은 별로 없다는 점을 반성해야겠다.



* 전공 스터디

우연히 okky에서 전공 과목 스터디를 모집한다는 글을 보게 되었고, 신청해서 두 달 정도 진행하게 되었다.

나 혼자 직장인이었고 나머지 멤버들은 학부 졸업 직전 or 기졸업한 취준생들이었는데, 다들 너무너무 잘해줘서 큰 탈 없이 스터디를 진행할 수 있었다. 회사를 다니고는 있었지만, 내심 작년에 실패했던 기억들이 아쉽게 남았고 기회가 된다면 중고신입을 지원해봐야겠다는 생각이 마음 한켠에 남아 있었고 이 것이 전공 스터디를 열심히 하는 계기가 되었다.

방식은 trello에 각자 발표할 주제를 정리하고, 매주마다 두 번씩 모여서 서로 정리해온 것들을 발표하고 공유하는 것이었다.

나 같은 경우는 2017년에 이미 한 번씩 공부해본 것들이기 때문에 복습하는 느낌이 강했고, 다른 멤버들이 준비해온 주제에 최대한 많은 부연 설명을 해서 도움을 주려고 했다. 내가 준비한 주제를 발표하는 시간에는 최대한 면접 준비를 한다는 심정으로 임했던 것이 기억난다.

사실 남이 발표하는 거에 내가 아는 내용을 덧붙인다는 것이 도움될 수도 있지만, 경우에 따라서는 그렇지 않을 수도 있다는 것을 잘 알고 있다. 그럼에도 불구하고 항상 고마워하면서 스터디를 좋은 분위기로 유지해준 모든 멤버들에게 정말로 감사한다.

각자 취업을 준비한 기간이 짧기에 아쉽게도 대부분의 인원들이 내년을 기약하게 되었지만, 워낙에 열심히 해온 친구들이니 다들 잘 할 수 있을 것이라고 믿고 있다.



* 세미나 다니기
  * [GDG Campus Korea 2월 새해 Meetup](https://www.meetup.com/ko-KR/GDG-Campus/events/246643824/)
  * [IT 회사 탐방기](https://jojoldu.tistory.com/274)
  * 생각보다 별로 못 다녀서 아쉽다. DEVIEW를 신청했는데도 못가고 다른 분께 양도한게 특히 아쉬웠다.



## 조금 빠른 이직 도전, 그리고 성공

위의 '전공 스터디' 활동에서 언급했지만, 중고신입으로 원하는 회사들을 도전해보자는 욕심이 남아있었다. 재직한 지 얼마 안된 신입이 이런 생각을 갖고 있는 점에 대해 별로 좋지 않은 시선으로 바라보실 분들도 있으시겠지만.. 해보지도 않고 지난날을 후회하기보다는 한번이라도 더 도전해보고 싶었다.

그렇다고 다니는 회사에 큰 불만이 생겨서 이직을 결심한 것은 아니다. 좀 더 가고 싶었던 회사에 도전해보자는 마음이 강했다. 그래서 작년과 비슷하게 신입 공채를 지원했고, 지인 추천으로 수시 채용을 지원한 곳도 있었다.

이제 와서 반성하는 것이지만, 너무나도 쓸데없는 자신감을 가지게 된 것이 없지 않았다. 보통 사람들은 이걸 줄여서 '근자감'이라고 한다.

시험들을 통과하고 기술 면접을 보고 나올 때만 해도 'N사 뿌셔ㅠㅠL사 뿌셔ㅠㅠ지구뿌셔ㅠㅠㅠㅠ' 하면서 한 군데라도 잘 될거라는 생각을 했는데, 나중에 결과를 까보니 전부 기술면접 탈락이었다.

어떤 곳은 컨디션 난조로 코딩테스트를 탈락한 곳도 있었다. 여긴 정말 시험본 날짜도 그렇고 이래저래 운이 없었지만, 어디가서 불평할만한 사항은 아니다.

기술면접 탈락 원인은 다양하겠지만, 제일 큰 문제는 역시 '내가 아는 것을 명확하게 설명하지 못하고, 막연하고 흐리멍텅하게 설명한 점'을 꼽고 싶다. 특히 1승을 확신했던 모 회사는 정말 가고 싶은 회사였고 기술면접에서 주어진 3문제를 '비교적 잘' 풀었다고 착각한 결과, 왜 떨어졌는지도 모른채로 허무하게 탈락했다. 작년에 이어 2전 0승 2패였으니 그 좌절감은 너무나도 컸다.

다행히, 내 노력을 알아주는 분들도 계셨다.

열심히 이직 활동을 하던 도중 지인 추천으로 [쏘카](https://socar.co.kr)에 면접을 보게 됐고, 세 번의 면접을 거쳐 최종합격하게 되었다!! 가고 싶은 회사 중 하나였기 때문에 너무나도 기뻤고, 내년 1월부터 출근 예정이다.

이 곳의 면접은 여러모로 인상깊은 기억으로 남았는데, 특히 CTO님과의 1차 면접은 앞으로도 잊지 못할 것 같다. 단순히 면접관과 면접자로서의 만남이 아니라, 업계 선배님께 내 부족했던 점을 확실히 배워갈 수 있는 자리였다고 생각한다.

합격 이후, 재직중이신 지인분과 페북에서 알게된 변성윤(kyle)님을 통해 쏘카의 분위기를 충분히 들을 수 있었다. 벌써부터 출근이 너무 기대되고, 한편으로는 같이 일하게 되실 분들께 민폐 끼치지 않고 1인분 이상 잘해야겠다는 생각을 했다.



## 느낀 점 + 발전한 점

어떻게든 개발자로 전직 후 밥벌이를 할 수 있던 한 해였다.

작년에 혼자 공부 할 때는 잘 하지 못했던 것들도 일부 깨달음이 있었는데 주로 다음과 같다.

* 디버그 도구를 조금 더 잘 쓸 수 있게 되었다 (IntelliJ)

  * 토이 프로젝트를 할 때나 알고리즘 문제를 풀 때는 쓸 줄 아는 기능이 매우 적었다.
    * 디버그 모드에서 쓸 수 있는 버튼 중에 resume이랑 step over, step into 정도만 쓰는 법을 알았고 나머지는 왜 이 기능이 있는지, 왜 쓰는 지도 잘 모르고 있었다.
  * 실무를 하면서 이런 저런 기능들의 사용법을 알게 되었고, 지금은 거의 대부분의 기능을 이용할 수 있게 되었다.
    * 이렇게 사용법을 익힌 뒤로 코드 까보는게 재밌어졌다.
  * 지금 이걸 읽으면서 '어? 나도 그런데..' 하시는 분들은 이동욱(창천향로)님의 글을 읽어보시면 좋을 것 같다.
    * https://jojoldu.tistory.com/149

* 궁금한 점이나 문제가 생겼을 때 무작정 구글링만 하는게 아니라 내부 코드를 까보기도 했다

  * 어제 있던 일이다. 아는 동생이 개발 도중에 mybatis 관련하여 궁금한 점이 있다고 나에게 질문을 해왔는데, 가르쳐주려고 보니 내가 써본 기능은 아니고 그렇다고 찾아보려니 키워드를 요리조리 조합해도 원하는 내용을 알려주는 곳은 없더라.

    그래서, mybatis 소스를 받은 뒤에 해당 기능이 구현 되어있는 부분을 찾아봤다. 다행히 크게 어렵지 않은 코드여서 바로 질문했던 사항에 대해 설명해줄 수 있었고, 앞으로는 이렇게 알아보는 것도 괜찮을 거라고 조언할 수 있었다.

  * '어지간한 질문은 이미 인터넷에 올라와 있을 것이다'라는 믿음을 가지고 있기 때문에, 문제가 생기면 일단 구글링부터 하고 본다. 보통 이 정도만 해줘도 해결책이나 원하던 정보를 알아낼 수 있으나, 사실 한계가 있다. 요리조리 키워드를 조합해서 찾아봐도 안나올 수도 있는거고.

    그럴 때는 레퍼런스를 읽어보고, 공개 되어있는 소스도 읽어보고 하면서 파악해야 된다고 생각한다.

  * '이 라이브러리 / 프레임워크의 이 기능은 어떤 식으로 구현한 것일까? 넘나 신기하다' 싶을 때도 소스를 받아서 내부 코드를 까보는 재미가 있었다.



물론, 반성해야할 점도 있었다.

* 회사일은 나 혼자 하는 것이 아니다

  * 의외로 일 하면서 문제 있던 부분이 있다면, 혼자서 해결하기에 벅찰 때 팀원들에게 도움의 손길을 별로 내밀지 않았다는 것이다.
  * 강한 책임감을 갖고 업무를 수행하는 것도 중요하지만, 업무라는게 나 혼자서만 하는게 아니기 때문에 꼭 필요할 때는 다른 사람의 도움도 구하고 조언도 받고.. 의견도 구해야 된다.
  * 이렇게 부족했음에도 불구하고, 싫은 소리 한 번 안하고 나랑 같이 업무 잘해주신 옆 자리 팀원 정 모 사원에게 매우 감사드린다. 이 분은 내년에 21살이 되는 병특 사원님인데, 정말 이 분 덕분에 1년동안 재밌게 회사 다닐 수 있었다고 생각한다.
  * 매번 이런 이야기를 잊지 않고 해주신 차장님께도 감사 인사 전한다.

* 사놓은 책은 좀 성실하게 읽자

  * 위에서 썼지만, 100% 읽은 책이 별로 없다. 내년엔 어떻게든 개선해야 될 점이다.

| ![books](/images/books.jpeg) |
| :--------------------------------------------------------: |
|           *참 많이 샀다... (본가에도 잔뜩 있음)*           |

* 테스트 코드좀 신경쓰자

  * 업무 하면서 테스트 코드를 생각보다 많이 작성하지 않았다는 것을 깨달았다.
  * 급하다는 이유로 기능 구현에만 급급하고, 테스트 코드에 소홀했던 것 같다. 내년엔 더욱 노력해야겠다.



## 마무리하며

올 해의 내 모습은 불과 수 년 전까지 상상도 할 수 없는 모습이었다.

'나 같은 사람은 개발자 할 수 없을 거야'라고 생각하고 포기했던 내가, QA에서 개발자로 전직하고 일 년이나 별 문제 없이 지냈다는 사실이 믿겨지지 않는다.

중고신입 도전 + 이직 준비를 하면서 매우 많이 느꼈다. 부족했던 것은 내 학벌이나 잡다한 스펙이 아니라, 나의 개발 역량이 부족했고 내 노력이 부족한 것이었음을.

그래도 다행히 내 노력을 알아주는 분들이 계셔서, 좋은 회사로 이직 성공하고 매우 즐거운 마음으로 첫 출근을 기다리고 있다.



지금 이 글을 읽는 분들 중에서도 취준생 분들이나, 개발자 커리어를 고민하고 있는데 도무지 확신이 생기지 않아 각종 커뮤니티에 질문을 올리는 분들이 계실 것이라고 생각한다.

그런 분들께 말씀드리고 싶은 것이 있다.

지방 4년제 출신에 스펙이라고는 아무 것도 없던 나같은 사람도 결국은 해낼 수 있었다고.. 누구나 각자 좋아하는 것에 몰입해본 경험이 있을텐데 그 때의 마음가짐으로 임하면 무엇이든 해낼 수 있다고 말씀드리고 싶다.



2018년에는 반짝반짝 빛나는 사람이 되고 싶다던 작년 회고글 내용이 생각난다.

내년에는 더욱 힘내서 무럭무럭 성장하는 개발자가 될 수 있도록 노력해야겠다!



읽어주셔서 감사합니다.
